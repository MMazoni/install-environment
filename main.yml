---
- name: Install environment
  hosts: all

  vars:
    github_email: mmazoni.andrade@gmail.com
    github_name: Matheus Mazoni
    ssh_key_name: crostini
    distro: debian

  tasks:
  update_packages
  - name: Update system packages
    apt:
      update_cache: yes
      upgrade: safe
    become: yes
  
  - name: Install packages
    apt:
      name: "{{ item }}"
      state: latest
    loop:
      - fish
      - git
      - vim
    become: yes

  # Fish
  - name: Create fish config directory
    file:
      path: "{{ ansible_env.HOME }}/.config/fish"
      state: directory
      mode: 0755

  - name: Download the fish config file
    get_url:
      url: https://raw.githubusercontent.com/MMazoni/configuration-files/master/.config/fish/config.fish
      dest: "{{ ansible_env.HOME }}/.config/fish/config.fish"

  - name: Add fish to shell
    shell: chsh -s $(which fish) "{{ ansible_env.USER }}"
    become: yes

  - name: Execute fish to install the theme
    shell: fish

  # Vim
  - name: Download vim confiruration file
    get_url:
      url: https://raw.githubusercontent.com/MMazoni/configuration-files/master/.vimrc
      dest: "{{ ansible_env.HOME }}/.vimrc"
    
  - name: Create vim themes directory
    file:
      path: "{{ ansible_env.HOME }}/.vim/colors"
      state: directory
      mode: 0755

  - name: Download atlantic-dark vim theme file
    get_url:
      url: https://raw.githubusercontent.com/MMazoni/configuration-files/master/.vim/colors/atlantic-dark.vim
      dest: "{{ ansible_env.HOME }}/.vim/colors/atlantic-dark.vim"


  # Github
  - name: Get gh-cli into source list
    shell: "{{ item }}"
    loop:
      - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null

  - name: Install gh-cli
    apt:
      update_cache: yes
      name: gh
      state: latest
    become: yes
    
  - name: Change git config editor to vim
    community.general.git_config:
      name: core.editor
      scope: global
      value: vim
  
  - name: Set git config username
    community.general.git_config:
      name: user.name
      scope: global
      value: "{{ github_name }}"
  
  - name: Set git config email
    community.general.git_config:
      name: user.email
      scope: global
      value: "{{ github_email }}"
  
  - name: Create ssh folder
    file:
      path: "{{ ansible_env.HOME }}/.ssh"
      state: directory
      mode: 0755
    
  - name: Generate ssh-key
    openssh_keypair:
      path: "{{ ansible_env.HOME }}/.ssh/id_rsa"
      type: rsa
      size: 4096
      state: present
      force: no
  
  - name: Authenticate to GitHub
    shell: "echo {{ gh_token }} | gh auth login --with-token"
  
  - name: Check if ssh-key is already on GitHub
    shell: gh ssh-key list | grep "{{ ssh_key_name }}"
    changed_when: true
    register: check_ssh_key_github
    ignore_errors: true
  
  - name: Add ssh-key to GitHub account
    shell: "gh ssh-key add {{ ansible_env.HOME }}/.ssh/id_rsa.pub -t {{ ssh_key_name }}"
    when: check_ssh_key_github is failed
  
  # Docker
  - name: Install dependencies to Docker
    apt:
      name: "{{ item }}"
      state: latest
    loop:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    become: yes
    
  - name: Get docker to source list
    shell: "{{ item }}"
    loop:
      - "curl -fsSL https://download.docker.com/linux/{{ distro }}/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg"
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ distro }} $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
  - name: Install docker
    apt:
      update_cache: yes
      name: "{{ item }}"
      state: latest
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    become: yes
    
    
  - name: Create docker group
    group:
      name: docker
      state: present
    become: yes
    
  - name: Add ansible_env.USER to docker group
    user:
      name: "{{ ansible_env.USER }}"
      groups: docker
      append: yes
    become: yes
  
  # Docker Compose
  - name: Get system name
    shell: uname -s
    register: system
    
  - name: Get machine name
    shell: uname -m
    register: machine
  - name: Download docker-compose binary
    get_url:
      url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ system.stdout }}-{{ machine.stdout }}"
      dest: /usr/local/bin/docker-compose
    become: yes
    
  - name: Give executable permission to docker-compose binary
    file:
      path: /usr/local/bin/docker-compose
      mode: u+x,g+x,o+x
    become: yes
      